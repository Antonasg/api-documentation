{"Structs/Part.html#/s:vV9Multipart4Part7headersGVs10DictionaryV4HTTP9HeaderKeySS_":{"name":"headers","abstract":"<p>Undocumented</p>","parent_name":"Part"},"Structs/Part.html#/s:vV9Multipart4Part4bodyGSaVs5UInt8_":{"name":"body","abstract":"<p>Undocumented</p>","parent_name":"Part"},"Structs/Part.html#/s:FV9Multipart4PartcFT7headersGVs10DictionaryV4HTTP9HeaderKeySS_4bodyGSaVs5UInt8__S0_":{"name":"init(headers:body:)","abstract":"<p>Create a new Part.</p>","parent_name":"Part"},"Structs/Part.html":{"name":"Part","abstract":"<p>A single Multipart part with 0 or more"},"Classes/Serializer/Error.html#/s:FOC9Multipart10Serializer5Error22partsAlreadySerializedFMS1_S1_":{"name":"partsAlreadySerialized","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/Serializer/Error.html#/s:FOC9Multipart10Serializer5Error25epilogueAlreadySerializedFMS1_S1_":{"name":"epilogueAlreadySerialized","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/Serializer.html#/s:vC9Multipart10Serializer8boundaryGSaVs5UInt8_":{"name":"boundary","abstract":"<p>The multipart boundary being used.</p>","parent_name":"Serializer"},"Classes/Serializer.html#/s:C9Multipart10Serializer17SerializeCallback":{"name":"SerializeCallback","abstract":"<p>A callback type for handling serialized bytes.</p>","parent_name":"Serializer"},"Classes/Serializer.html#/s:vC9Multipart10Serializer11onSerializeGSqFGSaVs5UInt8_T__":{"name":"onSerialize","abstract":"<p>Called whenever bytes have been serialized.","parent_name":"Serializer"},"Classes/Serializer.html#/s:FC9Multipart10SerializercFT8boundaryGSaVs5UInt8__S0_":{"name":"init(boundary:)","abstract":"<p>Create a new Multipart serializer.</p>","parent_name":"Serializer"},"Classes/Serializer/Error.html":{"name":"Error","abstract":"<p>Possible errors that may be encountered while serializing.</p>","parent_name":"Serializer"},"Classes/Serializer.html#/s:FC9Multipart10Serializer9serializeFzT8preambleGSaVs5UInt8__T_":{"name":"serialize(preamble:)","abstract":"<p>Call this method to add bytes to the preamble.</p>","parent_name":"Serializer"},"Classes/Serializer.html#/s:FC9Multipart10Serializer9serializeFzVS_4PartT_":{"name":"serialize(_:)","abstract":"<p>This method serializes an entire Part.</p>","parent_name":"Serializer"},"Classes/Serializer.html#/s:FC9Multipart10Serializer6finishFzT8epilogueGSaVs5UInt8__T_":{"name":"finish(epilogue:)","abstract":"<p>This method serializes the closing boundary.</p>","parent_name":"Serializer"},"Classes/Serializer.html#/s:FC9Multipart10SerializercFzT8boundaryP4Bits16BytesConvertible__S0_":{"name":"init(boundary:)","abstract":"<p>@see init(boundary: Bytes)</p>","parent_name":"Serializer"},"Classes/Parser/Error.html#/s:FOC9Multipart6Parser5Error18hasAlreadyFinishedFMS1_S1_":{"name":"hasAlreadyFinished","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/Parser/Error.html#/s:FOC9Multipart6Parser5Error15invalidBoundaryFMS1_S1_":{"name":"invalidBoundary","abstract":"<p>Undocumented</p>","parent_name":"Error"},"Classes/Parser.html#/s:vC9Multipart6Parser8boundaryGSaVs5UInt8_":{"name":"boundary","abstract":"<p>The multipart boundary being used.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:C9Multipart6Parser12PartCallback":{"name":"PartCallback","abstract":"<p>A callback type for handling parsed Part structs.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:vC9Multipart6Parser6onPartGSqFVS_4PartT__":{"name":"onPart","abstract":"<p>Called whenever a complete Part has been parsed.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:C9Multipart6Parser16PreambleCallback":{"name":"PreambleCallback","abstract":"<p>A callback type for handling the parsed preamble.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:vC9Multipart6Parser10onPreambleGSqFGSaVs5UInt8_T__":{"name":"onPreamble","abstract":"<p>Called once after the preamble has been parsed.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:C9Multipart6Parser16EpilogueCallback":{"name":"EpilogueCallback","abstract":"<p>A callback type for handling the parsed epilogue.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:vC9Multipart6Parser10onEpilogueGSqFGSaVs5UInt8_T__":{"name":"onEpilogue","abstract":"<p>CAlled once after the epilogue has been parsed.</p>","parent_name":"Parser"},"Classes/Parser/Error.html":{"name":"Error","abstract":"<p>Possible errors that may be encountered while parsing.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:FC9Multipart6ParsercFT8boundaryGSaVs5UInt8__S0_":{"name":"init(boundary:)","abstract":"<p>Create a new multipart parser.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:ZFC9Multipart6Parser15extractBoundaryFzT11contentTypeP4Bits16BytesConvertible__GSaVs5UInt8_":{"name":"extractBoundary(contentType:)","abstract":"<p>Extracts the boundary from a multipart Content-Type header</p>","parent_name":"Parser"},"Classes/Parser.html#/s:FC9Multipart6ParsercFzT11contentTypeP4Bits16BytesConvertible__S0_":{"name":"init(contentType:)","abstract":"<p>Create a new multipart parser from a","parent_name":"Parser"},"Classes/Parser.html#/s:FC9Multipart6Parser5parseFzGSaVs5UInt8_T_":{"name":"parse(_:)","abstract":"<p>The main method for passing bytes into the parser.</p>","parent_name":"Parser"},"Classes/Parser.html#/s:FC9Multipart6Parser6finishFzT_T_":{"name":"finish()","abstract":"<p>Call this method when there are no bytes","parent_name":"Parser"},"Classes/Parser.html#/s:FC9Multipart6Parser5parseFzP4Bits16BytesConvertible_T_":{"name":"parse(_:)","abstract":"<p>@see parse(_ bytes: Bytes)</p>","parent_name":"Parser"},"Classes/Parser.html#/s:FC9Multipart6ParsercFzT8boundaryP4Bits16BytesConvertible__S0_":{"name":"init(boundary:)","abstract":"<p>@see init(boundary: Bytes)</p>","parent_name":"Parser"},"Classes/Parser.html":{"name":"Parser","abstract":"<p>Parses preamble, Parts, and epilogue from a Multipart"},"Classes/Serializer.html":{"name":"Serializer","abstract":"<p>Creates a multipart formatted array of bytes from Parts"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}